<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="_space_body_8cpp" kind="file">
    <compoundname>SpaceBody.cpp</compoundname>
    <includes refid="_space_body_8h" local="yes">SpaceBody.h</includes>
    <incdepgraph>
      <node id="1473">
        <label>iomanip</label>
      </node>
      <node id="1477">
        <label>cmath</label>
      </node>
      <node id="1481">
        <label>stdexcept</label>
      </node>
      <node id="1465">
        <label>string</label>
      </node>
      <node id="1475">
        <label>Date.h</label>
        <link refid="_date_8h"/>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
      </node>
      <node id="1472">
        <label>fstream</label>
      </node>
      <node id="1462">
        <label>SSWC/src/CSpice/SpaceBody.cpp</label>
        <link refid="SpaceBody.cpp"/>
        <childnode refid="1463" relation="include">
        </childnode>
      </node>
      <node id="1478">
        <label>Window.h</label>
        <link refid="_window_8h"/>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1474">
        <label>Frame.h</label>
        <link refid="_frame_8h"/>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1482" relation="include">
        </childnode>
      </node>
      <node id="1467">
        <label>CSpiceCore.h</label>
        <link refid="_c_spice_core_8h"/>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
      </node>
      <node id="1469">
        <label>CSpiceUtil.h</label>
        <link refid="_c_spice_util_8h"/>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1471">
        <label>ctime</label>
      </node>
      <node id="1479">
        <label>Time.h</label>
      </node>
      <node id="1466">
        <label>vector</label>
      </node>
      <node id="1485">
        <label>array</label>
      </node>
      <node id="1470">
        <label>sstream</label>
      </node>
      <node id="1482">
        <label>../Math/Matrix4x4.h</label>
        <link refid="_matrix4x4_8h"/>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
      </node>
      <node id="1476">
        <label>../Math/Quantity.h</label>
        <link refid="_quantity_8h"/>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1465" relation="include">
        </childnode>
      </node>
      <node id="1464">
        <label>SpaceObject.h</label>
        <link refid="_space_object_8h"/>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1484" relation="include">
        </childnode>
      </node>
      <node id="1463">
        <label>SpaceBody.h</label>
        <link refid="_space_body_8h"/>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
      </node>
      <node id="1483">
        <label>cstring</label>
      </node>
      <node id="1468">
        <label>..\..\include\CSpice\SpiceUsr.h</label>
      </node>
      <node id="1480">
        <label>../Math/Vector3.h</label>
        <link refid="_vector3_8h"/>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
      </node>
      <node id="1484">
        <label>../Math/Vector3T.h</label>
        <link refid="_vector3_t_8h"/>
        <childnode refid="1477" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_space_body_8h" kindref="compound">SpaceBody.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_space_body_1a91bf206403f3f1e9e5a940693a27da58" refkind="member"><highlight class="normal"><ref refid="class_space_body_1a91bf206403f3f1e9e5a940693a27da58" kindref="member">SpaceBody::SpaceBody</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>spiceId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/><ref refid="glext_8h_1ad977737dfc9a274a62741b9500c49a32" kindref="member">name</ref>)<sp/>:<sp/><ref refid="class_space_object" kindref="compound">SpaceObject</ref>(spiceId,<sp/>name)</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="6"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_space_body_1a92a9cc41eb5c681fa3755bca9ec8ffc5" refkind="member"><highlight class="normal"><ref refid="class_space_body_1a91bf206403f3f1e9e5a940693a27da58" kindref="member">SpaceBody::SpaceBody</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/>spiceName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref>&amp;<sp/><ref refid="glext_8h_1ad977737dfc9a274a62741b9500c49a32" kindref="member">name</ref>)<sp/>:<sp/><ref refid="class_space_object" kindref="compound">SpaceObject</ref>(spiceName,<sp/>name)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_space_body_1a4c744f1048b7f3b6a21e56a106791a41" refkind="member"><highlight class="normal"><ref refid="class_space_body_1a91bf206403f3f1e9e5a940693a27da58" kindref="member">SpaceBody::SpaceBody</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_space_object" kindref="compound">SpaceObject</ref>&amp;<sp/><ref refid="glext_8h_1a0c0d4701a6c89f4f7f0640715d27ab26" kindref="member">obj</ref>)<sp/>:<sp/><ref refid="class_space_object" kindref="compound">SpaceObject</ref>(obj.GetSpiceId(),<sp/>obj.GetName())</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SpaceBody::Init()</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//frame<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(HasIAUFrame())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>UseBodyFrame(GetIAUFrame());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_space_body_1a218ec46693291ac05c434322525fb3af" refkind="member"><highlight class="normal"><ref refid="class_space_body_1a218ec46693291ac05c434322525fb3af" kindref="member">SpaceBody::~SpaceBody</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(this-&gt;frame<sp/>!=<sp/>nullptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>delete<sp/>this-&gt;frame;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>this-&gt;frame<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_space_body_1abb3a8167a17c31d8aa0a4250ad8ebc2a" refkind="member"><highlight class="normal"><ref refid="class_space_body" kindref="compound">SpaceBody</ref>*<sp/><ref refid="class_space_body_1abb3a8167a17c31d8aa0a4250ad8ebc2a" kindref="member">SpaceBody::Clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="37"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1a91bf206403f3f1e9e5a940693a27da58" kindref="member">SpaceBody</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_space_body_1a2d9a7c988b1451e2bf8cdb6ffed70011" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1a2d9a7c988b1451e2bf8cdb6ffed70011" kindref="member">SpaceBody::HasIAUFrame</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glext_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>frameName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IAU_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_space_object_1aafe0595c55762e7fe30cb9722b45abe5" kindref="member">GetSpiceName</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frcode;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_c_spice_util_8h_1adfb67f0e2d00a734172c7e1209d6b4ac" kindref="member">CSPICE_ASSERT</ref>(<sp/>namfrm_c(frameName.c_str(),<sp/>&amp;frcode)<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frcode<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_space_body_1a88cff28dd1d28613d94b2fc00994316b" refkind="member"><highlight class="normal"><ref refid="class_frame" kindref="compound">Frame</ref><sp/><ref refid="class_space_body_1a88cff28dd1d28613d94b2fc00994316b" kindref="member">SpaceBody::GetIAUFrame</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="glext_8h_1ae84541b4f3d8e1ea24ec0f466a8c568b" kindref="member">std::string</ref><sp/>frameName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IAU_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_space_object_1aafe0595c55762e7fe30cb9722b45abe5" kindref="member">GetSpiceName</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_frame" kindref="compound">Frame</ref>(frameName);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_space_body_1a5bf8f002b9e19bedb46f1accf75caaa8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1a5bf8f002b9e19bedb46f1accf75caaa8" kindref="member">SpaceBody::HasDefaultFrame</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>frameName[<ref refid="_frame_8h_1a877d5cc37c354f0e22ee95dd79ce9768" kindref="member">FRAME_NAME_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameId;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>SpiceBoolean<sp/>found;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_c_spice_util_8h_1adfb67f0e2d00a734172c7e1209d6b4ac" kindref="member">CSPICE_ASSERT</ref>(cidfrm_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/><ref refid="_frame_8h_1a877d5cc37c354f0e22ee95dd79ce9768" kindref="member">FRAME_NAME_MAX_LENGTH</ref>,<sp/>&amp;frameId,<sp/>frameName,<sp/>&amp;found));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>found<sp/>!=<sp/>SPICEFALSE;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_space_body_1ae775f995eaa5a5467d6065be2f98f397" refkind="member"><highlight class="normal"><ref refid="class_frame" kindref="compound">Frame</ref><sp/><ref refid="class_space_body_1ae775f995eaa5a5467d6065be2f98f397" kindref="member">SpaceBody::GetDefaultFrame</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="70"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>frameName[<ref refid="_frame_8h_1a877d5cc37c354f0e22ee95dd79ce9768" kindref="member">FRAME_NAME_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameId;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>SpiceBoolean<sp/>found;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_c_spice_util_8h_1adfb67f0e2d00a734172c7e1209d6b4ac" kindref="member">CSPICE_ASSERT</ref>(cidfrm_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/><ref refid="_frame_8h_1a877d5cc37c354f0e22ee95dd79ce9768" kindref="member">FRAME_NAME_MAX_LENGTH</ref>,<sp/>&amp;frameId,<sp/>frameName,<sp/>&amp;found));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!found)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_spice_util_1ad91e1b9618b9514d4cfd516a446a7e11" kindref="member">CSpiceUtil::SignalError</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>frame<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_frame" kindref="compound">Frame</ref>(frameId);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_space_body_1a40614e7d85560093d9260005a310a281" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1a40614e7d85560093d9260005a310a281" kindref="member">SpaceBody::HasParameter</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcac" kindref="member">BulkParameter</ref><sp/><ref refid="glext_8h_1ac7c896d55e93a6cf7ff8524005b4e7b4" kindref="member">param</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="84"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(param)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacae59753bed35e0ebfbe10cff15804a89d" kindref="member">BP_RADIUS</ref>:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bodfnd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;RADII&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>SPICEFALSE;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca35ccbddff5c61ac25c60773423f9bd9d" kindref="member">BP_GM</ref>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bodfnd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GM&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>SPICEFALSE;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacadb74f3603973fc2f6b212b48b525d634" kindref="member">BP_MASS</ref>:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1a40614e7d85560093d9260005a310a281" kindref="member">HasParameter</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca35ccbddff5c61ac25c60773423f9bd9d" kindref="member">BP_GM</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacaf618c8e50cf91cbd085ce4d337aaac55" kindref="member">BP_ACC</ref>:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1a40614e7d85560093d9260005a310a281" kindref="member">HasParameter</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca35ccbddff5c61ac25c60773423f9bd9d" kindref="member">BP_GM</ref>)<sp/>&amp;&amp;<sp/><ref refid="class_space_body_1a40614e7d85560093d9260005a310a281" kindref="member">HasParameter</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacae59753bed35e0ebfbe10cff15804a89d" kindref="member">BP_RADIUS</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacac17b2de205132b2b6b1d64ea099b2059" kindref="member">BP_POLE_RA</ref>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(bodfnd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;POLE_RA&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>SPICEFALSE);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca1c310590e6f88be6e339aa6fac74f4d2" kindref="member">BP_POLE_DEC</ref>:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(bodfnd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;POLE_DEC&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>SPICEFALSE);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca97eddf1b8bdd0fbe01972a7b59188a85" kindref="member">BP_PM</ref>:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>(bodfnd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;PM&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>SPICEFALSE);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" kindref="member">SpaceBody::GetSingleDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcac" kindref="member">BulkParameter</ref><sp/><ref refid="glext_8h_1ac7c896d55e93a6cf7ff8524005b4e7b4" kindref="member">param</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1a79169be77d7e02a24f68a5bfe627dc29" kindref="member">value</ref><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>radii;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GM;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(param)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacae59753bed35e0ebfbe10cff15804a89d" kindref="member">BP_RADIUS</ref>:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radii<sp/>=<sp/><ref refid="class_space_body_1a5a846abedc2aa8c89f4beabf186652fd" kindref="member">GetMultiDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacae59753bed35e0ebfbe10cff15804a89d" kindref="member">BP_RADIUS</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>std::pow(radii[0]<sp/>*<sp/>radii[1]<sp/>*<sp/>radii[2],<sp/>1.0<sp/>/<sp/>3.0);<sp/></highlight><highlight class="comment">//<sp/>volumetric<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca35ccbddff5c61ac25c60773423f9bd9d" kindref="member">BP_GM</ref>:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_c_spice_util_8h_1adfb67f0e2d00a734172c7e1209d6b4ac" kindref="member">CSPICE_ASSERT</ref>(<sp/>bodvcd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;GM&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>&amp;dim,<sp/>&amp;value)<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//value<sp/>*=<sp/>1000.0<sp/>*<sp/>1000.0<sp/>*<sp/>1000.0;<sp/>//<sp/>km^3<sp/>-&gt;<sp/>m^3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacadb74f3603973fc2f6b212b48b525d634" kindref="member">BP_MASS</ref>:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GM<sp/>=<sp/><ref refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" kindref="member">GetSingleDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca35ccbddff5c61ac25c60773423f9bd9d" kindref="member">BP_GM</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>GM<sp/>/<sp/><ref refid="_space_body_8h_1aed9ea78689ecce0b7264c02c7f8a9a54" kindref="member">G</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacaf618c8e50cf91cbd085ce4d337aaac55" kindref="member">BP_ACC</ref>:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GM<sp/>=<sp/><ref refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" kindref="member">GetSingleDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca35ccbddff5c61ac25c60773423f9bd9d" kindref="member">BP_GM</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius<sp/>=<sp/><ref refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" kindref="member">GetSingleDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacae59753bed35e0ebfbe10cff15804a89d" kindref="member">BP_RADIUS</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>GM<sp/>/<sp/>(radius<sp/>*<sp/>radius);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1a79169be77d7e02a24f68a5bfe627dc29" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_space_body_1a5a846abedc2aa8c89f4beabf186652fd" refkind="member"><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="class_space_body_1a5a846abedc2aa8c89f4beabf186652fd" kindref="member">SpaceBody::GetMultiDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcac" kindref="member">BulkParameter</ref><sp/><ref refid="glext_8h_1ac7c896d55e93a6cf7ff8524005b4e7b4" kindref="member">param</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="glext_8h_1a0aa8cf39c79d294b1d9f4daef5020bec" kindref="member">values</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dim;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(param)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacae59753bed35e0ebfbe10cff15804a89d" kindref="member">BP_RADIUS</ref>:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radii[3];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_c_spice_util_8h_1adfb67f0e2d00a734172c7e1209d6b4ac" kindref="member">CSPICE_ASSERT</ref>(<sp/>bodvcd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;RADII&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>&amp;dim,<sp/>radii)<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>radii[i]<sp/>*=<sp/>1000.0;<sp/>//<sp/>km<sp/>-&gt;<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.push_back(radii[i]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacac17b2de205132b2b6b1d64ea099b2059" kindref="member">BP_POLE_RA</ref>:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pole_ra[3];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_c_spice_util_8h_1adfb67f0e2d00a734172c7e1209d6b4ac" kindref="member">CSPICE_ASSERT</ref>(bodvcd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;POLE_RA&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>&amp;dim,<sp/>pole_ra));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.push_back(pole_ra[i]);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca1c310590e6f88be6e339aa6fac74f4d2" kindref="member">BP_POLE_DEC</ref>:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pole_dec[3];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_c_spice_util_8h_1adfb67f0e2d00a734172c7e1209d6b4ac" kindref="member">CSPICE_ASSERT</ref>(bodvcd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;POLE_DEC&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>&amp;dim,<sp/>pole_dec));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.push_back(pole_dec[i]);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca97eddf1b8bdd0fbe01972a7b59188a85" kindref="member">BP_PM</ref>:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pm[3];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_c_spice_util_8h_1adfb67f0e2d00a734172c7e1209d6b4ac" kindref="member">CSPICE_ASSERT</ref>(bodvcd_c(<ref refid="class_space_object_1a841dd12234c1861d3c1978035c9d7b8d" kindref="member">spiceId</ref>,<sp/></highlight><highlight class="stringliteral">&quot;PM&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>&amp;dim,<sp/>pm));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.push_back(pm[i]);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1a0aa8cf39c79d294b1d9f4daef5020bec" kindref="member">values</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_space_body_1ada3282b18f50ad81c02d97a7b0095dee" refkind="member"><highlight class="normal"><ref refid="class_quantity" kindref="compound">Length</ref><sp/><ref refid="class_space_body_1ada3282b18f50ad81c02d97a7b0095dee" kindref="member">SpaceBody::GetRadius</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1a79169be77d7e02a24f68a5bfe627dc29" kindref="member">value</ref><sp/>=<sp/><ref refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" kindref="member">GetSingleDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacae59753bed35e0ebfbe10cff15804a89d" kindref="member">BP_RADIUS</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_quantity_8h_1ae34580a93ad25d119ae1a64ded5aa3b2" kindref="member">Length</ref>(value,<sp/><ref refid="class_units_1_1_metric_1a75f22b48abbb71b6fa08adf183565a9a" kindref="member">Units::Metric::kilometers</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_space_body_1a9040b548e16390c7294dcc4b2d5a5d58" refkind="member"><highlight class="normal">std::array&lt;Length,<sp/>3&gt;<sp/><ref refid="class_space_body_1a9040b548e16390c7294dcc4b2d5a5d58" kindref="member">SpaceBody::GetRadii</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;Length,<sp/>3&gt;<sp/>radii;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="glext_8h_1a0aa8cf39c79d294b1d9f4daef5020bec" kindref="member">values</ref><sp/>=<sp/><ref refid="class_space_body_1a5a846abedc2aa8c89f4beabf186652fd" kindref="member">GetMultiDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacae59753bed35e0ebfbe10cff15804a89d" kindref="member">BP_RADIUS</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radii[i]<sp/>=<sp/><ref refid="_quantity_8h_1ae34580a93ad25d119ae1a64ded5aa3b2" kindref="member">Length</ref>(values[i],<sp/><ref refid="class_units_1_1_metric_1a75f22b48abbb71b6fa08adf183565a9a" kindref="member">Units::Metric::kilometers</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>radii;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_space_body_1aafaa2bca2b31f390a6c0094d3e36ff61" refkind="member"><highlight class="normal"><ref refid="class_quantity" kindref="compound">GravitationalParameter</ref><sp/><ref refid="class_space_body_1aafaa2bca2b31f390a6c0094d3e36ff61" kindref="member">SpaceBody::GetGM</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1a79169be77d7e02a24f68a5bfe627dc29" kindref="member">value</ref><sp/>=<sp/><ref refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" kindref="member">GetSingleDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcaca35ccbddff5c61ac25c60773423f9bd9d" kindref="member">BP_GM</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_quantity_8h_1a9a85e5d41c1ee35f67f3cc41ad01c417" kindref="member">GravitationalParameter</ref>(value,<sp/><ref refid="class_units_1_1_metric_1a8e5b74eb410af1d26aadb0adfb77dc21" kindref="member">Units::Metric::gm</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="class_space_body_1ab5155fa5d6cc02f1dce20252187ff13d" refkind="member"><highlight class="normal"><ref refid="class_quantity" kindref="compound">Mass</ref><sp/><ref refid="class_space_body_1ab5155fa5d6cc02f1dce20252187ff13d" kindref="member">SpaceBody::GetMass</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="224"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1a79169be77d7e02a24f68a5bfe627dc29" kindref="member">value</ref><sp/>=<sp/><ref refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" kindref="member">GetSingleDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacadb74f3603973fc2f6b212b48b525d634" kindref="member">BP_MASS</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_quantity_8h_1a4ef88533f12b1ee67a3e0d8630b8ca87" kindref="member">Mass</ref>(value,<sp/><ref refid="class_units_1_1_metric_1a99628d80b8989197ae87ed949d06a89a" kindref="member">Units::Metric::kilograms</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_space_body_1a32dc9b481fe60576a78d4eab46be2d45" refkind="member"><highlight class="normal"><ref refid="class_quantity" kindref="compound">Acceleration</ref><sp/><ref refid="class_space_body_1a32dc9b481fe60576a78d4eab46be2d45" kindref="member">SpaceBody::GetSurfaceAcceleration</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="glext_8h_1a79169be77d7e02a24f68a5bfe627dc29" kindref="member">value</ref><sp/>=<sp/><ref refid="class_space_body_1aa9c61cb125d77e2fab3db00766db3510" kindref="member">GetSingleDimParam</ref>(<ref refid="class_space_body_1aac4475090a05b2f6d9c833f071c9bcacaf618c8e50cf91cbd085ce4d337aaac55" kindref="member">BP_ACC</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_quantity_8h_1aba4f456ecd43f9c8a095b7f882af47d8" kindref="member">Acceleration</ref>(value,<sp/><ref refid="class_unit_1a62b5aa1a4619ce98223eb728f91cf28d" kindref="member">AccelerationUnit::DerivedUnit</ref>(<ref refid="class_units_1_1_metric_1a75f22b48abbb71b6fa08adf183565a9a" kindref="member">Units::Metric::kilometers</ref>,<sp/><ref refid="class_units_1_1_common_1a0cc948d0fded9699abb22295119fff7b" kindref="member">Units::Common::seconds</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/anton/Documents/doxygen/MissionsVisualizer/SSWC/src/CSpice/SpaceBody.cpp"/>
  </compounddef>
</doxygen>
